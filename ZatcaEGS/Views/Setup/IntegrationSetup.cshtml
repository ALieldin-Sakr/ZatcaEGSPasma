@using Zatca.eInvoice.Helpers
@model ZatcaEGS.Models.SetupViewModel


<div class="col-md-10 offset-md-1">

    <div class="card" id="wizardProfile">

        <form id="certInfoForm" action="/Setup/Finish" method="post">
            <input type="hidden" name="Referrer" value="@Model.Referrer" />
            <input type="hidden" name="BusinessDetails" value="@Model.BusinessDetails" />
            <input type="hidden" name="Api" value="@Model.Api" />
            <input type="hidden" name="Token" value="@Model.Token" />

            <input type="hidden" id="isFileReady" value="@Model.IsFileReady.ToString().ToLower()" />
            <input type="hidden" id="fileData" value="@Model.FileContent" />
            <input type="hidden" name="Filename" value="@Model.Filename" />

            <input type="hidden" id="ApiEndpoint" name="ApiEndpoint" value="@Model.CertificateInfo.ApiEndpoint" />
            <input type="hidden" id="ApiSecret" name="ApiSecret" value="@Model.CertificateInfo.ApiSecret" />

            <div class="card-header text-center">
                <h4 class="card-title">Manager - Zatca Integration</h4>
                <h5 class="card-description">Device Setup and Registration</h5>
            </div>

            <div class="wizard-navigation" id="wizardNav">
                <ul class="nav nav-pills nav-fill gap-3 p-2 small bg-transparent rounded-1 shadow-sm" id="pillNav2" role="tablist" style="--bs-nav-pills-link-active-bg: var(--bs-tertiary-bg); --bs-nav-link-color: var(--bs-secondary);">
                    <li class="nav-item">
                        <a class="nav-link rounded-5 active" data-bs-toggle="pill" href="#managerDataField" role="tab">Business Data Setup</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-5" data-bs-toggle="pill" href="#businessInfo" role="tab">Business Info</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-5" data-bs-toggle="pill" href="#csrConfig" role="tab">CSR Configuration</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-5" data-bs-toggle="pill" href="#registerDevice" role="tab">Register Device</a>
                    </li>
                </ul>
            </div>


            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane fade active show" id="managerDataField" role="tabpanel">
                        <!-- Business Data Setup Section -->
                        <div class="row text-center mt-2">
                            <div class="col-md-12">
                                <div class="border border-tertiary rounded p-4">
                                    <p class="mb-1">
                                        <span style="font-weight: bold;">Business Data Setup</span>
                                    </p>
                                    <hr />
                                    <p class="mb-2">
                                        This page will help you create or update custom fields and footers required in Manager with Zatca Integration.
                                    </p>
                                    <p class="mb-2">
                                        <b>*Clone/Backup your business data for Trial*</b><br />
                                        Try all types of Invoices you have, if all works without any problem, you are ready to enter Core Environment using your real business Data.</i><br />
                                    </p>
                                    <div class="mt-3 text-center">
                                        <button type="button" id="generateCustomField" class="btn btn-outline-primary btn-sm">Update Business Data</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Steps for eInvoice Generation Section -->
                        <div class="row text-center mt-2">
                            <div class="col-md-12">
                                <div class="border border-tertiary rounded p-4">
                                    <p class="mb-1">
                                        <span style="font-weight: bold;">The next step is to register the EGS according to your Business Tax Information.</span>
                                    </p>
                                    <hr />
                                    <p class="mb-2">
                                        <span style="font-weight: bold;">Generate CSR and Private Key:</span><br />
                                        Enter your business data correctly. This data will be used to create the CSR and Private Key, and it will also appear on the eInvoice XML generated by ZatcaEGS.
                                    </p>
                                    <p class="mb-2">
                                        <span style="font-weight: bold;">Get CCSID:</span><br />
                                        Make sure you have an OTP to get a Compliant CSID. Log in to the Fatoora Portal using your VAT number and generate an OTP there.
                                    </p>
                                    <p class="mb-2">
                                        <span style="font-weight: bold;">Get PCSID:</span><br />
                                        The PCSID is the certificate used to sign the invoice before reporting it to the Fatoora portal. After completing this process, your onboarded devices should be listed on the Fatoora portal, indicating successful integration.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="businessInfo" role="tabpanel">
                        @* <h5 class="info-text">Business Info</h5> *@
                        <div class="row text-start">
                            <!-- form content -->
                            <div class="col-md-12 mb-2 mt-2">
                                <div class="border border-tertiary rounded p-3">
                                    <div class="row">

                                        <div class="col-md-12 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.RegistrationName">Registration Name</label>
                                                <input asp-for="@Model.CertificateInfo.RegistrationName" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.RegistrationName" class="text-danger"></span>
                                            </div>
                                        </div>


                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CompanyID">Company ID</label>
                                                <input asp-for="@Model.CertificateInfo.CompanyID" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.CompanyID" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.TaxSchemeID">Tax Scheme ID</label>
                                                <input asp-for="@Model.CertificateInfo.TaxSchemeID" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.TaxSchemeID" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.IdentificationID">Business Identification ID</label>
                                                <input asp-for="@Model.CertificateInfo.IdentificationID" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.IdentificationID" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.IdentificationScheme">Identification Scheme</label>
                                                <input asp-for="@Model.CertificateInfo.IdentificationScheme" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.IdentificationScheme" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-12 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.StreetName">Street Name</label>
                                                <input asp-for="@Model.CertificateInfo.StreetName" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.StreetName" class="text-danger"></span>
                                            </div>
                                        </div>


                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CitySubdivisionName">City Subdivision Name</label>
                                                <input asp-for="@Model.CertificateInfo.CitySubdivisionName" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.CitySubdivisionName" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CityName">City Name</label>
                                                <input asp-for="@Model.CertificateInfo.CityName" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.CityName" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.BuildingNumber">Building Number</label>
                                                <input asp-for="@Model.CertificateInfo.BuildingNumber" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.BuildingNumber" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.PostalZone">Postal Zone</label>
                                                <input asp-for="@Model.CertificateInfo.PostalZone" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.PostalZone" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CountryIdentificationCode">Country Identification Code</label>
                                                <input asp-for="@Model.CertificateInfo.CountryIdentificationCode" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.CountryIdentificationCode" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.BusinessCategory">Business Category</label>
                                                <input asp-for="@Model.CertificateInfo.BusinessCategory" class="form-control form-control-sm readonly-control" />
                                                <span asp-validation-for="@Model.CertificateInfo.BusinessCategory" class="text-danger"></span>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="tab-pane fade" id="csrConfig" role="tabpanel">
                        @* <h5 class="info-text">CSR Configuration</h5> *@
                        <div class="row text-start">
                            <!-- form content -->

                            <div class="col-md-12 mb-2 mt-2">
                                <div class="border border-tertiary rounded p-3">
                                    <div class="row">

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrIndustryBusinessCategory"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrIndustryBusinessCategory" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>


                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrCommonName"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrCommonName" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrSerialNumber"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrSerialNumber" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrOrganizationIdentifier"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrOrganizationIdentifier" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>
                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrOrganizationUnitName"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrOrganizationUnitName" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrOrganizationName"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrOrganizationName" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>


                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrCountryName"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrCountryName" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrInvoiceType"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrInvoiceType" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CsrLocationAddress"></label>
                                                <input asp-for="@Model.CertificateInfo.CsrLocationAddress" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label style="color: var(--bs-success);" class="form-label" asp-for="@Model.CertificateInfo.EnvironmentType">CSR Environment Type</label>
                                                <select id="EnvironmentType" asp-for="@Model.CertificateInfo.EnvironmentType" class="form-control form-control-sm">
                                                    @foreach (var value in Enum.GetValues(typeof(EnvironmentType)))
                                                    {
                                                        <option value="@value">@value</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>


                                        <div class="col-md-12 mb-1 text-end">
                                            <button type="button" id="generateCSRButton" class="btn btn-outline-success btn-sm">Generate CSR</button>
                                        </div>


                                        <div class="col-md-12 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.GeneratedCSR">Generated CSR</label>
                                                <textarea id="GeneratedCSR" asp-for="@Model.CertificateInfo.GeneratedCSR" class="form-control form-control-sm" readonly></textarea>
                                            </div>
                                        </div>

                                        <div class="col-md-12 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.EcSecp256k1Privkeypem">Generated EC Secp256k1 Private Key (PEM)</label>
                                                <textarea id="EcSecp256k1Privkeypem" asp-for="@Model.CertificateInfo.EcSecp256k1Privkeypem" class="form-control form-control-sm" readonly></textarea>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="registerDevice" role="tabpanel">

                        <div class="row text-start">
                            <!-- CCSID OTP -->
                            <div class="col-md-12 mb-2 mt-2">
                                <div class="container border border-tertiary" style="border-radius: 5px; padding: 20px;">
                                    <div class="row d-flex justify-content-center">
                                        <div class="col-md-6">
                                            <div class="input-group input-group-sm mt-1">
                                                <span class="form-control form-control-sm text-start">CCSID OTP</span>
                                                <input type="text" id="CCSIDOTP" class="form-control form-control-sm text-center" autocomplete="off" style="width: 50px;">
                                                <button id="ccsidButton" type="button" class="form-control form-control-sm btn btn-outline-success btn-sm text-center" )>Get CCSID</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12 mb-2 mt-2">
                                <div class="border border-tertiary rounded p-3">
                                    <div class="row">

                                        <!-- CCSID Binary Token -->
                                        <div class="col-md-12 mb-3 mt-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CCSIDBinaryToken">CCSID Binary Token</label>
                                                <textarea asp-for="@Model.CertificateInfo.CCSIDBinaryToken" class="form-control form-control-sm" readonly></textarea>
                                            </div>
                                        </div>

                                        <!-- Token Secret -->
                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CCSIDSecret">Token Secret</label>
                                                <input asp-for="@Model.CertificateInfo.CCSIDSecret" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <!-- Request ID -->
                                        <div class="col-md-4 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.CCSIDComplianceRequestId">Request ID</label>
                                                <input asp-for="@Model.CertificateInfo.CCSIDComplianceRequestId" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <!-- PCSID content -->
                                        <div class="col-md-2 d-flex flex-column justify-content-center" style="padding-block-start: 5px; border-left: 1px solid var(--bs-border-color-translucent);">
                                            <div class="d-flex justify-content-center">
                                                <button type="button" id="pcsidButton" class="btn btn-outline-success btn-sm"> Get PCSID</button>
                                            </div>
                                        </div>

                                        <!-- PCSID Binary Token -->
                                        <div class="col-md-12 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.PCSIDBinaryToken">PCSID Binary Token</label>
                                                <textarea asp-for="@Model.CertificateInfo.PCSIDBinaryToken" class="form-control form-control-sm" readonly></textarea>
                                            </div>
                                        </div>

                                        <!-- PCSID Secret -->
                                        <div class="col-md-6 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.PCSIDSecret">PCSID Secret</label>
                                                <input asp-for="@Model.CertificateInfo.PCSIDSecret" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                        <!-- Registered Date -->
                                        <div class="col-md-3 mb-3">
                                            <div class="form-group">
                                                <label class="form-label" asp-for="@Model.CertificateInfo.RegisteredDate">Registered Date</label>
                                                <input asp-for="@Model.CertificateInfo.RegisteredDate" type="datetime-local" class="form-control form-control-sm" readonly />
                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
            </div>

            <div class="card-footer">

                <button type="button" class="btn btn-outline-secondary btn-sm" name="backToManager" onclick="window.location.href='@Model.Referrer'">Back to Manager</button>

                <button type="button" class="btn btn-outline-secondary btn-sm" name="previous">Previous</button>


                <button type="button" class="btn btn-outline-secondary btn-sm ml-auto" name="next">Next</button>

                <button id="downloadCertificateButton" type="submit" class="btn btn-outline-primary btn-sm" name="finish" disabled>Download Certificate Info</button>

            </div>

        </form>

    </div>
</div>

<div class="loading-indicator" id="loadingIndicator"></div>


@section Scripts {

    <script>
        $(function () {
            var $tabs = $('.tab-pane');
            var $navLinks = $('#wizardNav .nav-link');
            var currentIndex = 0;

            function showLoading() {
                document.getElementById('loadingIndicator').style.display = 'block';
            }

            function hideLoading() {
                document.getElementById('loadingIndicator').style.display = 'none';
            }

            function updateButtons() {
                var isFirstTab = currentIndex === 0;
                var isLastTab = currentIndex === $tabs.length - 1;

                $('[name="previous"]').toggleClass('d-none', isFirstTab);
                $('[name="next"]').toggleClass('d-none', isLastTab);
                $('[name="finish"]').toggleClass('d-none', !isLastTab);
                $('[name="backToManager"]').toggleClass('d-none', !isFirstTab);

                $navLinks.removeClass('active');
                $navLinks.eq(currentIndex).addClass('active');
            }

            function handleTabShown(tabId) {
                if (tabId === "csrConfig") {
                    var identificationIdValue = $("#CertificateInfo_IdentificationID").val();

                    // Autofill CSR Common Name
                    if (identificationIdValue) {
                        var csrCommonName = "MNG-" + identificationIdValue + "-" + $("#CertificateInfo_CompanyID").val();
                        $("#CertificateInfo_CsrCommonName").val(csrCommonName);
                    }

                    // Autofill CSR Serial Number
                    var csrSerialNumberInput = $("#CertificateInfo_CsrSerialNumber").val();
                    var guidPattern = /\b[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\b/;

                    if (!csrSerialNumberInput || !guidPattern.test(csrSerialNumberInput)) {
                        var uuid = uuidv4();
                        var csrSerialNumber = "1-EGS|2-MNG|3-" + uuid;
                        $("#CertificateInfo_CsrSerialNumber").val(csrSerialNumber);
                    }

                    $("#CertificateInfo_CsrOrganizationIdentifier").val($("#CertificateInfo_CompanyID").val());
                    $("#CertificateInfo_CsrOrganizationUnitName").val($("#CertificateInfo_CityName").val());
                    $("#CertificateInfo_CsrOrganizationName").val($("#CertificateInfo_RegistrationName").val());
                    $("#CertificateInfo_CsrCountryName").val($("#CertificateInfo_CountryIdentificationCode").val());
                    $("#CertificateInfo_CsrInvoiceType").val("1100");
                    $("#CertificateInfo_CsrLocationAddress").val($("#CertificateInfo_PostalZone").val());
                    $("#CertificateInfo_CsrIndustryBusinessCategory").val($("#CertificateInfo_BusinessCategory").val());
                }
            }

            $('[name="next"]').on('click', function () {
                if (currentIndex < $tabs.length - 1) {
                    $tabs.eq(currentIndex).removeClass('active show');
                    currentIndex++;
                    $tabs.eq(currentIndex).addClass('active show');
                    handleTabShown($navLinks.eq(currentIndex).attr("href").substring(1));
                    updateButtons();
                }
            });

            $('[name="previous"]').on('click', function () {
                if (currentIndex > 0) {
                    $tabs.eq(currentIndex).removeClass('active show');
                    currentIndex--;
                    $tabs.eq(currentIndex).addClass('active show');
                    handleTabShown($navLinks.eq(currentIndex).attr("href").substring(1));
                    updateButtons();
                }
            });

            $navLinks.on('click', function (e) {
                e.preventDefault();
                var target = $(this).attr('href');
                currentIndex = $navLinks.index(this);
                $tabs.removeClass('active show');
                $(target).addClass('active show');
                handleTabShown(target.substring(1));
                updateButtons();
            });

            function uuidv4() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }

            function updateControlAtribut(inputClass, isReadonly) {

                var specificInputs = document.querySelectorAll("." + inputClass);
                specificInputs.forEach(function (input) {
                    if (isReadonly) {
                        input.setAttribute("readonly", "readonly");
                    } else {
                        input.removeAttribute("readonly");
                    }
                });
            }

            $("#generateCustomField").on('click', async function () {
                try {
                    showLoading();
                    var apiEndpoint = $('#ApiEndpoint').val();
                    var apiSecret = $('#ApiSecret').val();

                    if (!apiEndpoint || !apiSecret) {
                        hideLoading();
                        alert('API Endpoint or API Secret cannot be empty. Please provide valid values.');
                        return;
                    }

                    const response = await fetch('/setup/GetCfData');

                    if (!response.ok) {
                        hideLoading();
                        alert('Failed to fetch JSON data');
                        throw new Error('Failed to fetch JSON data');
                    }

                    const jsonObject = await response.json();

                    let successCount = 0;
                    let failureCount = 0;

                    for (let entry of jsonObject.jsondata) {
                        const apiPath = entry.apipath;
                        const key = entry.data.Key;
                        const fullApiUrl = `${apiEndpoint}${apiPath}/${encodeURIComponent(key)}`;

                        console.log(apiSecret);

                        try {
                            const result = await fetch(fullApiUrl, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': `Bearer ${apiSecret}`//'X-API-KEY': apiSecret
                                },
                                body: JSON.stringify(entry.data)
                            });

                            if (result.ok) {
                                console.log(`Data sent successfully to ${fullApiUrl}`);
                                successCount++;
                            } else {
                                console.error(`Failed to send data to ${fullApiUrl}`);
                                failureCount++;
                            }
                        } catch (err) {
                            console.error(`Error sending data to ${fullApiUrl}:`, err);
                            failureCount++;
                        }
                    }

                    hideLoading();
                    if (failureCount === 0) {
                        alert(`All ${successCount} API calls were successful!`);
                    } else {
                        alert(`${successCount} API calls were successful, but ${failureCount} failed.`);
                    }
                } catch (error) {
                    hideLoading();
                    console.error('An error occurred:', error);
                    alert('An error occurred while fetching JSON data: ' + error.message);
                }
            });

            $('#generateCSRButton').on('click', function () {
                showLoading();
                var csrData = {
                    CommonName: $('#CertificateInfo_CsrCommonName').val(),
                    SerialNumber: $('#CertificateInfo_CsrSerialNumber').val(),
                    OrganizationIdentifier: $('#CertificateInfo_CsrOrganizationIdentifier').val(),
                    OrganizationUnitName: $('#CertificateInfo_CsrOrganizationUnitName').val(),
                    OrganizationName: $('#CertificateInfo_CsrOrganizationName').val(),
                    CountryName: $('#CertificateInfo_CsrCountryName').val(),
                    InvoiceType: $('#CertificateInfo_CsrInvoiceType').val(),
                    LocationAddress: $('#CertificateInfo_CsrLocationAddress').val(),
                    IndustryBusinessCategory: $('#CertificateInfo_CsrIndustryBusinessCategory').val()
                };

                var environmentType = $('#EnvironmentType').val(); // Get the environment type value

                if (Object.values(csrData).some(val => !val)) {
                    hideLoading();
                    alert("Please provide all required inputs.");
                    return;
                }

                $.ajax({
                    url: 'generatecsr?environmentType=' + environmentType, // Include environment type in the query string
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(csrData),
                    success: function (response) {
                        $('#GeneratedCSR').val(response.csr);
                        $('#EcSecp256k1Privkeypem').val(response.privateKey);
                        checkGeneratedCSR();
                        hideLoading();
                        //alert('CSR Generated Successfully!');
                    },
                    error: function (xhr) {
                        var errorResponse = JSON.parse(xhr.responseText);
                        hideLoading();
                        alert('Errors:\n' + errorResponse.errors.join('\n'));
                    }
                });
            });

            $("#ccsidButton").on('click', function () {
                showLoading();

                var formData = new FormData($('#certInfoForm')[0]);
                formData.append('OTP', $("#CCSIDOTP").val());

                var otp = $("#CCSIDOTP").val();
                var csr = $("#GeneratedCSR").val();

                if (!otp || !csr) {
                    hideLoading();
                    alert("Please provide all required inputs.");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("GetCCSID", "setup")',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function (response) {
                        $("#CertificateInfo_CCSIDBinaryToken").val(response.ccsidBinaryToken);
                        $("#CertificateInfo_CCSIDSecret").val(response.ccsidSecret);
                        $("#CertificateInfo_CCSIDComplianceRequestId").val(response.ccsidComplianceRequestId);
                        checkCcsidContainer();
                        hideLoading();
                        //alert('CCSID Generated Successfully!');
                    },
                    error: function (xhr, status, error) {
                        hideLoading();
                        alert("Error: " + xhr.responseText);
                    }
                });
            });

            $("#pcsidButton").on('click', function () {
                showLoading();
                var formData = new FormData($('#certInfoForm')[0]);
                var CCSIDBinaryToken = $("#CertificateInfo_CCSIDBinaryToken").val();
                var CCSIDSecret = $("#CertificateInfo_CCSIDBinaryToken").val();
                if (!CCSIDBinaryToken || !CCSIDSecret) {
                    hideLoading();
                    alert("Please provide all required inputs.");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("GetPCSID", "setup")',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function (response) {
                        $("#CertificateInfo_PCSIDBinaryToken").val(response.pcsidBinaryToken);
                        $("#CertificateInfo_PCSIDSecret").val(response.pcsidSecret);
                        var formattedDate = response.registeredDate.slice(0, 16);
                        $("#CertificateInfo_RegisteredDate").val(formattedDate);
                        checkPcsidContainer();
                        hideLoading();
                        //alert('PCSID Generated Successfully!');
                    },
                    error: function (xhr, status, error) {
                        hideLoading();
                        alert("Error: " + xhr.responseText);
                    }
                });
            });

            function checkGeneratedCSR() {
                var generatedCSR = $("#GeneratedCSR").val();
                var privateKey = $("#EcSecp256k1Privkeypem").val();
                $("#generateCSRButton").toggleClass("d-none", !!(generatedCSR && privateKey));
                updateControlAtribut('readonly-control', !!(generatedCSR && privateKey));
                //$("#EnvironmentType").prop("disabled", !!(generatedCSR && privateKey));
            }

            function checkCcsidContainer() {
                var cCSIDBinaryToken = $("#CertificateInfo_CCSIDBinaryToken").val();
                $("#ccsidContainer").toggleClass("d-none", !!cCSIDBinaryToken);
                $("#urlContainer").toggleClass("col-md-10", !cCSIDBinaryToken).toggleClass("col-md-12", !!cCSIDBinaryToken);
                $("#pcsidContainer").toggleClass("d-none", !cCSIDBinaryToken);
                $("#ccsidButton").prop("disabled", !!(cCSIDBinaryToken));
            }

            function checkPcsidContainer() {
                var pCSIDBinaryToken = $("#CertificateInfo_PCSIDBinaryToken").val();
                $("#pcsidContainer").toggleClass("d-none", !!pCSIDBinaryToken);
                $("#pcsidButton").prop("disabled", !!(pCSIDBinaryToken));
                $("#downloadCertificateButton").prop("hidden", !pCSIDBinaryToken);
                $("#downloadCertificateButton").prop("disabled", !pCSIDBinaryToken);
            }

            $("#CCSIDBinaryToken, #PCSIDBinaryToken").on('input', function () {
                checkCcsidContainer();
                checkPcsidContainer();
            });

            $("#GeneratedCSR, #EcSecp256k1Privkeypem").on('input', checkGeneratedCSR);

            // Initial setup
            updateButtons();
            handleTabShown($navLinks.eq(currentIndex).attr("href").substring(1));
            checkGeneratedCSR();
            checkCcsidContainer();
            checkPcsidContainer();
        });

    </script>


    <script type="text/javascript">

        document.addEventListener('DOMContentLoaded', function () {
            var isFileReady = '@Model.IsFileReady'.toLowerCase() === 'true';
            var businessDetails = @Html.Raw(Json.Serialize(Model.BusinessDetailsJson));
            var apiUrl = '@Model.Api' + '/business-details-form/38cf4712-6e95-4ce1-b53a-bff03edad273';
            var secretKey = '@Model.Token';

            var fileData = '@Html.Raw(Model.FileContent)'; 
            var fileName = '@Model.Filename'; 

            var message = "";
            

            if (isFileReady) {
                var payload;
                try {
                    payload = JSON.parse(businessDetails);
                    console.log('Parsed Payload:', payload);
                } catch (error) {
                    console.error("Error parsing businessDetails JSON:", error);
                    message += `Error parsing businessDetails JSON: ${error.message}\n`;
                    return;
                }

                if (payload) {
                    fetch(apiUrl, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${secretKey}`
                        },
                        body: payload
                    })
                        .then(response => {
                            console.log('Network Response Status:', response.status);
                            return response.text().then(text => ({
                                status: response.status,
                                ok: response.ok,
                                body: text
                            }));
                        })
                        .then(response => {
                            if (response.ok) {
                                console.log('Update Zatca Reference successful!');
                                message += 'Update Zatca Reference: successful\n';
                            } else {
                                console.error('Error response body:', response.body);
                                message += `Update Zatca Reference Error: Network response was not ok. ${response.body}\n`;
                            }
                        })
                        .catch(error => {
                            console.error('Update Zatca Reference Error:', error.message);
                            message += `Update Zatca Reference Error: ${error.message}\n`;
                        })
                        .finally(() => {
                            if (isFileReady) {
                                if (fileData && fileName) {
                                    downloadFile(fileData, fileName);
                                } else {
                                    console.error('File data or filename is missing.');
                                    message += 'File data or filename is missing.\n';
                                }
                            }
                            alert(message);
                        });
                } else {
                    console.error("Payload is null or undefined");
                }
            }
        });

       function downloadFile(base64Data, fileName) {
            var binaryString = atob(base64Data);
            var binaryLen = binaryString.length;
            var bytes = new Uint8Array(binaryLen);

            for (var i = 0; i < binaryLen; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }

            var blob = new Blob([bytes], { type: "application/zip" });

            var link = document.createElement("a");
            var url = URL.createObjectURL(blob);
            link.href = url;
            link.download = fileName;

            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

    </script>

}

